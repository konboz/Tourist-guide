// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TouristGuide_Core;

namespace TouristGuide_Core.Migrations
{
    [DbContext(typeof(TouristGuideDbContext))]
    [Migration("20190803074608_version1")]
    partial class version1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TouristGuide_Core.Bar", b =>
                {
                    b.Property<int>("BarId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Directions");

                    b.Property<string>("Name");

                    b.Property<string>("Photo");

                    b.Property<int>("VillageId");

                    b.HasKey("BarId");

                    b.HasIndex("VillageId");

                    b.ToTable("Bar");
                });

            modelBuilder.Entity("TouristGuide_Core.Beach", b =>
                {
                    b.Property<int>("BeachId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Directions");

                    b.Property<string>("Name");

                    b.Property<string>("Photo");

                    b.Property<int>("VillageId");

                    b.HasKey("BeachId");

                    b.HasIndex("VillageId");

                    b.ToTable("Beach");
                });

            modelBuilder.Entity("TouristGuide_Core.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Directions");

                    b.Property<string>("Name");

                    b.Property<string>("Photo");

                    b.Property<int>("VillageId");

                    b.HasKey("FoodId");

                    b.HasIndex("VillageId");

                    b.ToTable("Food");
                });

            modelBuilder.Entity("TouristGuide_Core.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Directions");

                    b.Property<string>("Name");

                    b.Property<string>("Photo");

                    b.Property<int>("Stars");

                    b.Property<int>("VillageId");

                    b.HasKey("HotelId");

                    b.HasIndex("VillageId");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("TouristGuide_Core.Sight", b =>
                {
                    b.Property<int>("SightId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Directions");

                    b.Property<string>("Name");

                    b.Property<string>("Photo");

                    b.Property<int>("VillageId");

                    b.HasKey("SightId");

                    b.HasIndex("VillageId");

                    b.ToTable("Sight");
                });

            modelBuilder.Entity("TouristGuide_Core.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("TouristGuide_Core.UserHistory", b =>
                {
                    b.Property<int>("UserHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserId");

                    b.Property<string>("VisitedForm");

                    b.HasKey("UserHistoryId");

                    b.HasIndex("UserId");

                    b.ToTable("UserHistory");
                });

            modelBuilder.Entity("TouristGuide_Core.Village", b =>
                {
                    b.Property<int>("VillageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Directions");

                    b.Property<string>("Name");

                    b.Property<string>("Photo");

                    b.HasKey("VillageId");

                    b.ToTable("Village");
                });

            modelBuilder.Entity("TouristGuide_Core.Bar", b =>
                {
                    b.HasOne("TouristGuide_Core.Village")
                        .WithMany("Bars")
                        .HasForeignKey("VillageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TouristGuide_Core.Beach", b =>
                {
                    b.HasOne("TouristGuide_Core.Village")
                        .WithMany("Beaches")
                        .HasForeignKey("VillageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TouristGuide_Core.Food", b =>
                {
                    b.HasOne("TouristGuide_Core.Village")
                        .WithMany("Restaurants")
                        .HasForeignKey("VillageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TouristGuide_Core.Hotel", b =>
                {
                    b.HasOne("TouristGuide_Core.Village")
                        .WithMany("Hotels")
                        .HasForeignKey("VillageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TouristGuide_Core.Sight", b =>
                {
                    b.HasOne("TouristGuide_Core.Village")
                        .WithMany("Sights")
                        .HasForeignKey("VillageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TouristGuide_Core.UserHistory", b =>
                {
                    b.HasOne("TouristGuide_Core.User")
                        .WithMany("History")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
